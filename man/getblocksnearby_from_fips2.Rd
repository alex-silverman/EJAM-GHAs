% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getblocksnearby_from_fips2.R
\name{getblocksnearby_from_fips2}
\alias{getblocksnearby_from_fips2}
\title{Find all blocks within each of the FIPS codes provided}
\usage{
getblocksnearby_from_fips2(fips, inshiny = FALSE, need_blockwt = TRUE)
}
\arguments{
\item{fips}{vector of FIPS codes identifying blockgroups, tracts, counties, or states.
This is useful if -- instead of gettings stats on and comparing circular buffers or polygons --
one will be getting stats on one or more tracts,
or analyzing and comparing blockgroups in a county,
or comparing whole counties to each other, within a State.}

\item{inshiny}{used by shiny app server code to handle errors via validate() instead of stop()}

\item{need_blockwt}{ignored now}
}
\value{
same as for \link{getblocksnearby} but one row per FIPS, and the distance column is irrelevant
}
\description{
Allows EJAM to analyze and compare Counties, for example
}
\examples{
  x <- getblocksnearby_from_fips(fips_counties_from_state_abbrev("DE"))
  counties_ej <- doaggregate(x)
  #cannot use mapfast(counties_ej$results_bysite) since no lat lon. 
  # mapfastej_counties() should work...
  y =  ejamit(fips=fips_counties_from_statename("Delaware"))
  
  # x=getblocksnearby_from_fips("482011000011") # one blockgroup only
  # y=doaggregate(x)
}
\seealso{
\code{\link[=getblocksnearby]{getblocksnearby()}} \code{\link[=fips_bgs_in_fips]{fips_bgs_in_fips()}} \code{\link[=fips_lead_zero]{fips_lead_zero()}} \code{\link[=getblocksnearby_from_fips]{getblocksnearby_from_fips()}} \code{\link[=fips_from_table]{fips_from_table()}}
}
\keyword{internal}
