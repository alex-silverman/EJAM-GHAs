% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_and_clean_points.R
\name{read_and_clean_points}
\alias{read_and_clean_points}
\title{Flexibly read .csv or .xlsx of lat/lon points or facility IDs}
\usage{
read_and_clean_points(filepath, default_points = NULL)
}
\arguments{
\item{filepath}{filename that can include path}

\item{default_points}{what to return if no matches}
}
\value{
data.frame with lat, lon, etc. columns
}
\description{
Flexibly read .csv or .xlsx of lat/lon points or facility IDs
}
\details{
*** THIS WOULD REPLACE SOME OF THE CODE IN server.R

and may want to merge with EJAM   ::latlon_from_anything()

so one can read in a file or table or vectors - any format -
and the other figures out if it is latlon or program IDs or registry IDs (but not NAICS?)
and I guess turns those into lat, lon, siteid as below.

EJAM  ::  latlon_from_anything() uses

EJAMbatch.summarizer   ::  read_csv_or_xl() and

EJAM   ::latlon_df_clean()  which uses  EJAM  ::  latlon_infer()  \code{\link[=latlon_as.numeric]{latlon_as.numeric()}} \code{\link[=latlon_is.valid]{latlon_is.valid()}}

read_and_clean_points()

would be the most general / flexible broadest way to get points, but is still work in progress

is similar to what is done by EJAM  ::latlon_from_anything()

except it also uses these functions:

EJAM  ::latlon_from_siteid()

EJAM  ::latlon_from_programid()  but not  _from_naics() ?
}
\seealso{
\code{\link[=read_csv_or_xl]{read_csv_or_xl()}}
}
\keyword{internal}
